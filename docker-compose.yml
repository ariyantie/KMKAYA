# Docker Compose untuk development
version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:6.0
    container_name: kamikaya-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: kamikaya_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - kamikaya-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kamikaya-backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:admin123@mongodb:27017/kamikaya_db?authSource=admin
      JWT_SECRET: your_jwt_secret_key_here
      API_HOST: 0.0.0.0
      API_PORT: 8001
      ENVIRONMENT: development
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - kamikaya-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kamikaya-frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - kamikaya-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: kamikaya-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - kamikaya-network

volumes:
  mongodb_data:
  backend_uploads:
  nginx_logs:

networks:
  kamikaya-network:
    driver: bridge